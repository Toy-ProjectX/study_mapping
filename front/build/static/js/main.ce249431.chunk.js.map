{"version":3,"sources":["board/Table.js","Area_city/Area.js","Area_city/Citis.js","kakao/markerData.js","map/Map.js","map/MapHome.js","TestHome.js","App.js","reportWebVitals.js","index.js"],"names":["Table","console","log","this","props","React","Component","Area","state","areas","id","area","activeId","setState","className","map","list","onClick","handleClick","onSlected","bind","Citis","areaId","area_id","cities","city","city_id","value","latitude","longitude","markerdata","title","lat","lng","Map","markers","level","container","document","getElementById","options","center","kakao","maps","LatLng","forEach","el","marker","Marker","position","clickable","setMap","iwContent","infowindow","InfoWindow","removable","content","event","addListener","clickListener","closeMarkerListener","open","close","moveLatLon","setCenter","MapHome","selected_area_id","selected_area","selected_city_id","selected_city","active_city","Number","TestHome","isLogin","loginWithKakao","Promise","resolve","reject","Kakao","Auth","login","success","auth","fail","err","error","logoutWithKakao","getAccessToken","logout","init","loginView","Button","variant","mainView","Navbar","bg","Brand","href","Nav","Link","Form","inline","App","Container","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gSAceA,E,4JAXX,WAGI,OAFAC,QAAQC,IAAI,mDACZD,QAAQC,IAAIC,KAAKC,OAEb,8BACI,4G,GANIC,IAAMC,WCwCXC,G,wDAtCb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXC,MAAO,CACL,CAAEC,GAAI,EAAGC,KAAM,gBACf,CAAED,GAAI,EAAGC,KAAM,gBACf,CAAED,GAAI,EAAGC,KAAM,gBACf,CAAED,GAAI,EAAGC,KAAM,iBAEjBC,SAAU,GATK,E,+CAanB,SAAYF,GACVP,KAAKU,SAAS,CAAED,SAAUF,M,oBAI5B,WAAU,IAAD,OACP,OACE,oBAAII,UAAU,YAAd,SACGX,KAAKK,MAAMC,MAAMM,KAAI,SAACC,GAAD,OACpB,oBAEEF,UAAWE,EAAKN,KAAO,EAAKF,MAAMI,SAAW,YAAc,IAC3DK,QAAS,SAAUP,GACjBP,KAAKe,YAAYR,GACjBP,KAAKC,MAAMe,UAAUT,EAAIM,EAAKL,OAC9BS,KAAK,EAAMJ,EAAKN,IANpB,SAQGM,EAAKL,MAPDK,EAAKN,a,GAxBHL,IAAMC,YC0OVe,E,kDAzOb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXc,OAAQ,EAAKlB,MAAMmB,QAEnBC,OAAQ,CACN,CACEd,GAAI,EACJe,KAAM,CACJ,CACEC,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,UAEb,CACEH,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,qBACPC,SAAU,SACVC,UAAW,aAIjB,CACEnB,GAAI,EACJe,KAAM,CACJ,CACEC,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,aAIjB,CACEnB,GAAI,EACJe,KAAM,CACJ,CACEC,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,aAIjB,CACEnB,GAAI,EACJe,KAAM,CACJ,CACEC,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,WAEb,CACEH,QAAS,EACTC,MAAO,gBACPC,SAAU,SACVC,UAAW,cAKnBjB,UAAW,GAnMI,E,+CAuMnB,SAAYF,GACVP,KAAKU,SAAS,CAAED,SAAUF,M,gCAG5B,WACMP,KAAKK,MAAMc,SAAWnB,KAAKC,MAAMmB,UACnCpB,KAAKU,SAAS,CAAES,OAAQnB,KAAKC,MAAMmB,WACN,IAAzBpB,KAAKK,MAAMI,UACbT,KAAKU,SAAS,CAAED,UAAW,O,oBAKjC,WAAU,IAAD,OACHF,EAAKP,KAAKK,MAAMc,OACpB,OACE,6BACGnB,KAAKK,MAAMgB,OAAOd,GAAIe,KAAKV,KAAI,SAACC,GAAD,OAC9B,oBAEEF,UAAWE,EAAKU,UAAY,EAAKlB,MAAMI,SAAW,YAAc,IAChEK,QAAS,SAAUP,GACjBP,KAAKU,SAAS,CAAED,SAAUF,IAC1BP,KAAKC,MAAMe,UAAUT,EAAIM,EAAKW,MAAOX,EAAKY,SAAUZ,EAAKa,YACzDT,KAAK,EAAMJ,EAAKU,SANpB,SAQGV,EAAKW,OAPDX,EAAKU,kB,GA3NFrB,IAAMC,WCHbwB,G,MAAa,CACxB,CACEC,MAAO,uBACPC,IAAK,kBACLC,IAAK,oBAEP,CACEF,MAAO,uBACPC,IAAK,mBACLC,IAAK,oBAEP,CACEF,MAAO,uBACPC,IAAK,mBACLC,IAAK,oBAEP,CACEF,MAAO,uBACPC,IAAK,mBACLC,IAAK,oBAEP,CACEF,MAAO,uBACPC,IAAK,kBACLC,IAAK,sBC0EMC,E,kDA3FX,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IAUV+B,QAAUL,EATN,EAAKtB,MAAQ,CACToB,SAAU,EAAKxB,MAAMwB,SACrBC,UAAW,EAAKzB,MAAMyB,UACtBO,MAAO,GALI,E,qDAanB,WAAqB,IAAD,OACZC,EAAYC,SAASC,eAAe,SACpCC,EAAU,CACVC,OAAQ,IAAIC,MAAMC,KAAKC,OACnBzC,KAAKK,MAAMoB,SACXzB,KAAKK,MAAMqB,WAEfO,MAAO,GAEXjC,KAAKY,IAAM,IAAI2B,MAAMC,KAAKT,IAAIG,EAAWG,GAEzCrC,KAAKgC,QAAQU,SAAQ,SAACC,GAClB,IAAIC,EAAS,IAAIL,MAAMC,KAAKK,OAAO,CAE/BC,SAAU,IAAIP,MAAMC,KAAKC,OAAOE,EAAGd,IAAKc,EAAGb,KAC3CF,MAAOe,EAAGf,MACVmB,WAAW,IAGfH,EAAOI,OAAO,EAAKpC,KAEnB,IAAIqC,EAAS,+CAA2CN,EAAGf,MAA9C,yBAAoEe,EAAGf,MAAvE,uHAITsB,EAAa,IAAIX,MAAMC,KAAKW,WAAW,CAEvCC,WAJe,EAKfC,QAASJ,IAGbV,MAAMC,KAAKc,MAAMC,YACbX,EACA,QACA,EAAKY,cAAc,EAAK5C,IAAKgC,EAAQM,IAEzCX,MAAMC,KAAKc,MAAMC,YACb,EAAK3C,IACL,QACA,EAAK6C,oBAAoBP,S,2BAKrC,SAActC,EAAKgC,EAAQM,GACvB,OAAO,WACHA,EAAWQ,KAAK9C,EAAKgC,M,iCAI7B,SAAoBM,GAChB,OAAO,WACHA,EAAWS,W,uBAInB,WACI,IAAIC,EAAa,IAAIrB,MAAMC,KAAKC,OAC5BzC,KAAKC,MAAMwB,SACXzB,KAAKC,MAAMyB,WAGf1B,KAAKY,IAAIiD,UAAUD,K,gCAGvB,WACI5D,KAAK6D,c,oBAGT,WACI,OACI,qBAAKlD,UAAU,YAAf,SACI,qBAAKJ,GAAG,gB,GAtFNL,IAAMC,WCuDT2D,E,kDAvDb,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACX0D,iBAAkB,EAClBC,cAAe,eACfC,iBAAkB,EAClBC,cAAe,gBACfC,aAAa,EAEb1C,SAAU,UACVC,UAAW,YAVI,E,0CAcnB,WACE,OACE,8BACE,sBAAKf,UAAU,eAAf,UACE,cAAC,EAAD,CACEK,UAAW,SAAUT,EAAIC,GACvBV,QAAQC,IAAI,CAAEQ,OACdP,KAAKU,SAAS,CACZqD,iBAAkBK,OAAO7D,GACzByD,cAAexD,EACf2D,aAAa,KAEflD,KAAKjB,QAET,cAAC,EAAD,CACEoB,QAASpB,KAAKK,MAAM0D,iBACpB/C,UAAW,SAAUT,EAAIe,EAAMG,EAAUC,GACvC1B,KAAKU,SAAS,CACZuD,iBAAkBG,OAAO7D,GACzB2D,cAAe5C,EACf6C,aAAa,EACb1C,SAAUA,EACVC,UAAWA,KAEbT,KAAKjB,QAET,+BAAOA,KAAKK,MAAM2D,gBAClB,gCAC8B,IAA3BhE,KAAKK,MAAM8D,aACV,MAAQnE,KAAKK,MAAM6D,gBAEvB,cAAC,EAAD,CACEzC,SAAUzB,KAAKK,MAAMoB,SACrBC,UAAW1B,KAAKK,MAAMqB,qB,GAhDZxB,IAAMC,W,gCCmHbkE,E,4MAhHXhE,MAAQ,CACJiE,SAAS,G,EAWbC,eAAiB,WACb,IACI,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACpBC,OACDD,EAAO,2FAEXC,MAAMC,KAAKC,MAAM,CACbC,QAAS,SAACC,GACNjF,QAAQC,IAAI,oFAAoBgF,GAChC,EAAKrE,SAAS,CACV4D,SAAS,KAGjBU,KAAM,SAACC,GACHnF,QAAQoF,MAAMD,SAI5B,MAAOA,GACLnF,QAAQoF,MAAMD,K,EAItBE,gBAAkB,WACVR,MAAMC,KAAKQ,mBACXtF,QAAQC,IACJ,wGACA4E,MAAMC,KAAKQ,kBAEfT,MAAMC,KAAKS,QAAO,WACdvF,QAAQC,IACJ,2DACA4E,MAAMC,KAAKQ,kBAEf,EAAK1E,SAAS,CACV4D,SAAS,S,uDAKzB,WACIxE,QAAQC,IAAI,wEACZ4E,MAAMW,KAAK,oCACPX,MAAMC,KAAKQ,mBACXtF,QAAQC,IAAI,4HACZC,KAAKU,SAAS,CACV4D,SAAS,O,oBAKrB,WAAU,IACEA,EAAYtE,KAAKK,MAAjBiE,QAERxE,QAAQC,IAAIC,KAAKC,OAEjB,IAAMsF,EACF,gCACI,cAACC,EAAA,EAAD,CACIC,QAAQ,eACR9E,UAAU,OACVG,QAASd,KAAKuE,eAHlB,gCAOA,cAACiB,EAAA,EAAD,CAAQC,QAAQ,eAAhB,yCAIFC,EACF,gCACI,cAACF,EAAA,EAAD,CACIC,QAAQ,eACR9E,UAAU,OACVG,QAASd,KAAKmF,gBAHlB,sCAOA,cAACK,EAAA,EAAD,CAAQC,QAAQ,eAAhB,mCAIR,OACI,8BACI,eAACE,EAAA,EAAD,CAAQC,GAAG,OAAOH,QAAQ,OAA1B,UACI,cAACE,EAAA,EAAOE,MAAR,CAAcC,KAAK,IAAInF,UAAU,OAAjC,2BAGA,eAACoF,EAAA,EAAD,CAAKpF,UAAU,UAAf,UACI,cAACoF,EAAA,EAAIC,KAAL,CAAUF,KAAK,IAAf,kBACA,cAACC,EAAA,EAAIC,KAAL,CAAUF,KAAK,SAAf,gCACA,cAACC,EAAA,EAAIC,KAAL,CAAUF,KAAK,WAAf,yCAEJ,cAACG,EAAA,EAAD,CAAMC,QAAM,EAAZ,SAAc5B,EAAUoB,EAAWH,a,GA1GhCrF,IAAMC,W,QCedgG,E,4JAdX,WACI,OACI,cAACC,EAAA,EAAD,UACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,QAAQC,OAAO,EAAMC,UAAWlC,IAC5C,cAAC,IAAD,CAAOgC,KAAK,WAAWE,UAAWzC,IAClC,cAAC,IAAD,CAAOuC,KAAK,SAASE,UAAW1G,a,GARlCK,IAAMC,WCKTqG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJhF,SAASC,eAAe,SAM5BoE,M","file":"static/js/main.ce249431.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Table extends React.Component {\n    render() {\n        console.log(\"Table 페이지 입니다@@@@\");\n        console.log(this.props);\n        return (\n            <div>\n                <h1>Table가 들어갈페이지 입니다.</h1>\n            </div>\n        );\n    }\n}\n\nexport default Table;\n","import React from \"react\";\nimport \"./Area.css\";\n\nclass Area extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      areas: [\n        { id: 0, area: \"서울\" },\n        { id: 1, area: \"경기\" },\n        { id: 2, area: \"인천\" },\n        { id: 3, area: \"강원\" },\n      ],\n      activeId: 0,\n    };\n  }\n\n  handleClick(id) {\n    this.setState({ activeId: id });\n    //this.props.onSlected(id);\n  }\n\n  render() {\n    return (\n      <ul className=\"area-list\">\n        {this.state.areas.map((list) => (\n          <li\n            key={list.id}\n            className={list.id === this.state.activeId ? \"is-active\" : \" \"}\n            onClick={function (id) {\n              this.handleClick(id);\n              this.props.onSlected(id, list.area);\n            }.bind(this, list.id)}\n          >\n            {list.area}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Area;\n","import React from \"react\";\nimport \"./Area.css\";\n\nclass Citis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      areaId: this.props.area_id,\n      // 입력밭은 지역의 초기 좌표 넣어놓고 리턴할때 같이 리턴\n      cities: [\n        {\n          id: 0,\n          city: [\n            {\n              city_id: 0,\n              value: \"강남구\",\n              latitude: 37.51719,\n              longitude: 127.0473,\n            },\n            {\n              city_id: 1,\n              value: \"강동구\",\n              latitude: 37.53012,\n              longitude: 127.12387,\n            },\n            {\n              city_id: 2,\n              value: \"강북구\",\n              latitude: 37.63967,\n              longitude: 127.02555,\n            },\n            {\n              city_id: 3,\n              value: \"강서구\",\n              latitude: 37.55094,\n              longitude: 126.84952,\n            },\n            {\n              city_id: 4,\n              value: \"관악구\",\n              latitude: 37.47809,\n              longitude: 126.95151,\n            },\n            {\n              city_id: 5,\n              value: \"광진구\",\n              latitude: 37.53854,\n              longitude: 127.08224,\n            },\n            {\n              city_id: 6,\n              value: \"구로구\",\n              latitude: 37.49541,\n              longitude: 126.88755,\n            },\n            {\n              city_id: 7,\n              value: \"금천구\",\n              latitude: 37.45677,\n              longitude: 126.89539,\n            },\n            {\n              city_id: 8,\n              value: \"노원구\",\n              latitude: 37.65408,\n              longitude: 127.05634,\n            },\n            {\n              city_id: 9,\n              value: \"마포구\",\n              latitude: 37.56616,\n              longitude: 126.90164,\n            },\n          ],\n        },\n        {\n          id: 1,\n          city: [\n            {\n              city_id: 0,\n              value: \"경기1\",\n              latitude: 37.27505,\n              longitude: 127.00943,\n            },\n            {\n              city_id: 1,\n              value: \"경기2\",\n              latitude: 37.27505,\n              longitude: 127.00943,\n            },\n            {\n              city_id: 2,\n              value: \"경기3\",\n              latitude: 37.27505,\n              longitude: 127.00943,\n            },\n            {\n              city_id: 3,\n              value: \"경기4\",\n              latitude: 37.27505,\n              longitude: 127.00943,\n            },\n            {\n              city_id: 4,\n              value: \"경기5\",\n              latitude: 37.27505,\n              longitude: 127.00943,\n            },\n            {\n              city_id: 5,\n              value: \"경기6\",\n              latitude: 37.27505,\n              longitude: 127.00943,\n            },\n          ],\n        },\n        {\n          id: 2,\n          city: [\n            {\n              city_id: 0,\n              value: \"인천1\",\n              latitude: 37.45605,\n              longitude: 126.70563,\n            },\n            {\n              city_id: 1,\n              value: \"인천2\",\n              latitude: 37.45605,\n              longitude: 126.70563,\n            },\n            {\n              city_id: 2,\n              value: \"인천3\",\n              latitude: 37.45605,\n              longitude: 126.70563,\n            },\n            {\n              city_id: 3,\n              value: \"인천4\",\n              latitude: 37.45605,\n              longitude: 126.70563,\n            },\n            {\n              city_id: 4,\n              value: \"인천5\",\n              latitude: 37.45605,\n              longitude: 126.70563,\n            },\n            {\n              city_id: 5,\n              value: \"인천6\",\n              latitude: 37.45605,\n              longitude: 126.70563,\n            },\n          ],\n        },\n        {\n          id: 3,\n          city: [\n            {\n              city_id: 0,\n              value: \"강원1\",\n              latitude: 37.88539,\n              longitude: 127.72977,\n            },\n            {\n              city_id: 1,\n              value: \"강원2\",\n              latitude: 37.88539,\n              longitude: 127.72977,\n            },\n            {\n              city_id: 2,\n              value: \"강원3\",\n              latitude: 37.88539,\n              longitude: 127.72977,\n            },\n            {\n              city_id: 3,\n              value: \"강원4\",\n              latitude: 37.88539,\n              longitude: 127.72977,\n            },\n            {\n              city_id: 4,\n              value: \"강원5\",\n              latitude: 37.88539,\n              longitude: 127.72977,\n            },\n            {\n              city_id: 5,\n              value: \"강원6\",\n              latitude: 37.88539,\n              longitude: 127.72977,\n            },\n          ],\n        },\n      ],\n      activeId: -1,\n    };\n  }\n\n  handleClick(id) {\n    this.setState({ activeId: id });\n  }\n\n  componentDidUpdate() {\n    if (this.state.areaId !== this.props.area_id) {\n      this.setState({ areaId: this.props.area_id });\n      if (this.state.activeId !== -1) {\n        this.setState({ activeId: -1 });\n      }\n    }\n  }\n\n  render() {\n    var id = this.state.areaId;\n    return (\n      <ul>\n        {this.state.cities[id].city.map((list) => (\n          <li\n            key={list.city_id}\n            className={list.city_id === this.state.activeId ? \"is-active\" : \" \"}\n            onClick={function (id) {\n              this.setState({ activeId: id });\n              this.props.onSlected(id, list.value, list.latitude, list.longitude);\n            }.bind(this, list.city_id)}\n          >\n            {list.value}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Citis;\n","export const markerdata = [\n  {\n    title: \"1번 마커\",\n    lat: 37.51777139439809,\n    lng: 127.04626960564401,\n  },\n  {\n    title: \"2번 마커\",\n    lat: 37.518387024024804,\n    lng: 127.04898620812234,\n  },\n  {\n    title: \"3번 마커\",\n    lat: 37.518189143627254,\n    lng: 127.04728833157338,\n  },\n  {\n    title: \"4번 마커\",\n    lat: 37.516639062358415,\n    lng: 127.04750316493262,\n  },\n  {\n    title: \"5번 마커\",\n    lat: 37.51862887713141,\n    lng: 127.05143946648288,\n  },\n];\n","import React from \"react\";\nimport \"./Map.css\";\nimport { markerdata } from \"../kakao/markerData\";\n\n/*global kakao */\n\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            latitude: this.props.latitude,\n            longitude: this.props.longitude,\n            level: 4,\n        };\n    }\n\n    map;\n    // 임시로 마커 추가\n    markers = markerdata;\n\n    componentDidMount() {\n        var container = document.getElementById(\"myMap\");\n        var options = {\n            center: new kakao.maps.LatLng(\n                this.state.latitude,\n                this.state.longitude\n            ),\n            level: 4,\n        };\n        this.map = new kakao.maps.Map(container, options);\n\n        this.markers.forEach((el) => {\n            var marker = new kakao.maps.Marker({\n                //map: this.map,\n                position: new kakao.maps.LatLng(el.lat, el.lng),\n                title: el.title,\n                clickable: true,\n            });\n\n            marker.setMap(this.map);\n\n            var iwContent = `<div style=\"padding:5px;width:100px\">${el.title}<br><a href=\"/${el.title}\">이 마커에 등록된 게시글로 이동.(미완성)</a></div>`;\n            //var iwPosition = new kakao.maps.LatLng(el.lat, el.lng);\n            var iwRemoveable = true;\n\n            var infowindow = new kakao.maps.InfoWindow({\n                //position: iwPosition,\n                removable: iwRemoveable,\n                content: iwContent,\n            });\n\n            kakao.maps.event.addListener(\n                marker,\n                \"click\",\n                this.clickListener(this.map, marker, infowindow)\n            );\n            kakao.maps.event.addListener(\n                this.map,\n                \"click\",\n                this.closeMarkerListener(infowindow)\n            );\n        });\n    }\n\n    clickListener(map, marker, infowindow) {\n        return function () {\n            infowindow.open(map, marker);\n        };\n    }\n\n    closeMarkerListener(infowindow) {\n        return function () {\n            infowindow.close();\n        };\n    }\n\n    setCenter() {\n        var moveLatLon = new kakao.maps.LatLng(\n            this.props.latitude,\n            this.props.longitude\n        );\n\n        this.map.setCenter(moveLatLon);\n    }\n\n    componentDidUpdate() {\n        this.setCenter();\n    }\n\n    render() {\n        return (\n            <div className=\"popup_map\">\n                <div id=\"myMap\"></div>\n            </div>\n        );\n    }\n}\n\nexport default Map;\n","import React from \"react\";\nimport Areas from \"../Area_city/Area\";\nimport Cities from \"../Area_city/Citis\";\nimport Map from \"./Map\";\n\nclass MapHome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected_area_id: 0,\n      selected_area: \"서울\",\n      selected_city_id: 0,\n      selected_city: \"서울1\",\n      active_city: false,\n      //초기 좌표 입력받기\n      latitude: 33.450701,\n      longitude: 126.570667,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"select__area\">\n          <Areas\n            onSlected={function (id, area) {\n              console.log({ id });\n              this.setState({\n                selected_area_id: Number(id),\n                selected_area: area,\n                active_city: false,\n              });\n            }.bind(this)}\n          ></Areas>\n          <Cities\n            area_id={this.state.selected_area_id}\n            onSlected={function (id, city, latitude, longitude) {\n              this.setState({\n                selected_city_id: Number(id),\n                selected_city: city,\n                active_city: true,\n                latitude: latitude,\n                longitude: longitude,\n              });\n            }.bind(this)}\n          ></Cities>\n          <span>{this.state.selected_area}</span>\n          <span>\n            {this.state.active_city === true &&\n              \" / \" + this.state.selected_city}\n          </span>\n          <Map\n            latitude={this.state.latitude}\n            longitude={this.state.longitude}\n          ></Map>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapHome;\n","/*eslint-disable no-undef*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"./board/Table\";\nimport MapHome from \"./map/MapHome\";\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\n\nclass TestHome extends React.Component {\n    state = {\n        isLogin: false,\n    };\n\n    /**\n     * 로그인 할 경우 가입된 토큰이거나 이메일이 있을경우 회원 정보를 활용하여 로그인,\n     * (카카오로 그냥 로그인할 경우 로그아웃이 안되는 문제가 있음... 망할 아니면 쿠키를 지워서 강제로 로그아웃을 시킬 수 있음....)\n     * 없을경우 user에서 이메일, 성별, 토큰을 가져와 회원가입 시킨다.\n     *\n     *\n     */\n\n    loginWithKakao = () => {\n        try {\n            return new Promise((resolve, reject) => {\n                if (!Kakao) {\n                    reject(\"Kakao 인스턴스가 존재하지 않습니다.\");\n                }\n                Kakao.Auth.login({\n                    success: (auth) => {\n                        console.log(\"정상적으로 로그인 되었습니다.\", auth);\n                        this.setState({\n                            isLogin: true,\n                        });\n                    },\n                    fail: (err) => {\n                        console.error(err);\n                    },\n                });\n            });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    logoutWithKakao = () => {\n        if (Kakao.Auth.getAccessToken()) {\n            console.log(\n                \"카카오 인증 액세스 토큰이 존재합니다.\",\n                Kakao.Auth.getAccessToken()\n            );\n            Kakao.Auth.logout(() => {\n                console.log(\n                    \"로그아웃 되었습니다.\",\n                    Kakao.Auth.getAccessToken()\n                );\n                this.setState({\n                    isLogin: false,\n                });\n            });\n        }\n    };\n    componentDidMount() {\n        console.log(\"componentDidMount 가 실행되었습니다.\");\n        Kakao.init(\"b7c5cb9042af5754b5af32fa54b1a96e\");\n        if (Kakao.Auth.getAccessToken()) {\n            console.log(\"액세스 토큰이 존재합니다. 세션을 유지합니다.\");\n            this.setState({\n                isLogin: true,\n            });\n        }\n    }\n\n    render() {\n        const { isLogin } = this.state;\n\n        console.log(this.props);\n\n        const loginView = (\n            <div>\n                <Button\n                    variant=\"outline-info\"\n                    className=\"mr-2\"\n                    onClick={this.loginWithKakao}\n                >\n                    로그인\n                </Button>\n                <Button variant=\"outline-info\">회원가입</Button>\n            </div>\n        );\n\n        const mainView = (\n            <div>\n                <Button\n                    variant=\"outline-info\"\n                    className=\"mr-2\"\n                    onClick={this.logoutWithKakao}\n                >\n                    로그아웃\n                </Button>\n                <Button variant=\"outline-info\">내정보</Button>\n            </div>\n        );\n\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand href=\"/\" className=\"pt-3\">\n                        StudyMatching\n                    </Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"/Table\">게시판</Nav.Link>\n                        <Nav.Link href=\"/MapHome\">지도보기</Nav.Link>\n                    </Nav>\n                    <Form inline>{isLogin ? mainView : loginView}</Form>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default TestHome;\n","/*eslint-disable no-undef*/\nimport React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Table from \"./board/Table\";\nimport MapHome from \"./map/MapHome\";\nimport TestHome from \"./TestHome\";\nimport { Container } from \"react-bootstrap\";\nclass App extends React.Component {\n    render() {\n        return (\n            <Container>\n                <BrowserRouter>\n                    <TestHome></TestHome>\n                    <Route path=\"/Home\" exact={true} component={TestHome} />\n                    <Route path=\"/MapHome\" component={MapHome} />\n                    <Route path=\"/Table\" component={Table} />\n                </BrowserRouter>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}