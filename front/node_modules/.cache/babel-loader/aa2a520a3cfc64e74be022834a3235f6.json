{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport { boardActions } from \"./boardSlice\";\nimport { commentActions } from \"./commentSlice\";\nexport function* getBoardAsync() {\n  try {\n    const responseForBoard = yield Axios.get(`http://localhost:4000/board/`);\n    const responseForComment = yield Axios.get(`http://localhost:4000/comment/`);\n    const boardData = responseForBoard.data;\n    yield put(boardActions.getBoardSuccessAsync(boardData));\n    yield put(commentActions.getCommentsAsync(responseForComment.data));\n  } catch (e) {\n    yield put(boardActions.getBoardFailedAsync(e.message));\n  }\n}","map":{"version":3,"sources":["/Users/mindong-yeob/Desktop/toyproject_frontend/src/board/sagas/boardSaga.js"],"names":["call","put","Axios","boardActions","commentActions","getBoardAsync","responseForBoard","get","responseForComment","boardData","data","getBoardSuccessAsync","getCommentsAsync","e","getBoardFailedAsync","message"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAO,UAAUC,aAAV,GAA0B;AAC7B,MAAI;AACA,UAAMC,gBAAgB,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAC1B,8BAD0B,CAA/B;AAGA,UAAMC,kBAAkB,GAAG,MAAMN,KAAK,CAACK,GAAN,CAC5B,gCAD4B,CAAjC;AAIA,UAAME,SAAS,GAAGH,gBAAgB,CAACI,IAAnC;AAEA,UAAMT,GAAG,CAACE,YAAY,CAACQ,oBAAb,CAAkCF,SAAlC,CAAD,CAAT;AACA,UAAMR,GAAG,CAACG,cAAc,CAACQ,gBAAf,CAAgCJ,kBAAkB,CAACE,IAAnD,CAAD,CAAT;AACH,GAZD,CAYE,OAAOG,CAAP,EAAU;AACR,UAAMZ,GAAG,CAACE,YAAY,CAACW,mBAAb,CAAiCD,CAAC,CAACE,OAAnC,CAAD,CAAT;AACH;AACJ","sourcesContent":["import { call, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport { boardActions } from \"./boardSlice\";\nimport { commentActions } from \"./commentSlice\";\n\nexport function* getBoardAsync() {\n    try {\n        const responseForBoard = yield Axios.get(\n            `http://localhost:4000/board/`\n        );\n        const responseForComment = yield Axios.get(\n            `http://localhost:4000/comment/`\n        );\n\n        const boardData = responseForBoard.data;\n\n        yield put(boardActions.getBoardSuccessAsync(boardData));\n        yield put(commentActions.getCommentsAsync(responseForComment.data));\n    } catch (e) {\n        yield put(boardActions.getBoardFailedAsync(e.message));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}