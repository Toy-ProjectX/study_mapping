{"ast":null,"code":"import { articleActions } from \"../sagas/articleSlice\";\nimport { call, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport history from \"../utils/history\";\nexport function* registerArticleAsync(action) {\n  const data = action.payload;\n  const response = yield Axios.post(`http://localhost:4000/board/`, data);\n  alert(\"저장되었습니다.\");\n  console.log(response.data.id); // history.push(`/article/${response.data.id}`);\n\n  history.push(`/article/${response.data.id}`, response.data.id);\n}\nexport function* fetchArticleAsync(action) {\n  console.log(action);\n  const id = action.payload;\n  const response = yield Axios.get(`http://localhost:4000/board/${id}`);\n  yield put(articleActions.getArticleAsync(response.data));\n}\nexport function* updateArticleAsync(action) {\n  const article = action.payload;\n  const response = yield Axios.put(`http://localhost:4000/board/${article.id}`, article);\n  alert(\"수정되었습니다.\");\n  console.log(response.data.id); // history.push(`/article/${response.data.id}`);\n\n  history.push(`/article/${response.data.id}`, response.data.id);\n}\nexport function* getArticleAsync(action) {\n  const id = action.payload; //Axios의 post method로 data 객체를 http://localhost:4000/board url로 요청을 보내주는 것.\n  //axios에서는 get으로 객체를 보낼수는 없게 되어있음\n  //const postedData = yield Axios.post(`http://localhost:4000/board`,data);\n\n  const response = yield Axios.get(`http://localhost:4000/board/${id}`);\n  const request = yield Axios.put(`http://localhost:4000/board/${id}`, { ...response.data,\n    views: parseInt(response.data.views) + 1\n  }); //yield alert(\"저장되었습니다\");\n  // yield put(articleActions.registerArticleAsync(data));\n  //debugger;\n  //console.log(response.data);\n  // const history = yield getContext(\"history\");\n  // yield history.push(`/article/${response.data.id}`);\n  //history.push(`/article/${response.data.id}`,response.data.id);\n\n  yield put(articleActions.getArticleAsync(request.data));\n}\nexport function* deleteArticleAsync(action) {\n  const id = action.payload;\n  yield Axios.delete(`http://localhost:4000/board/${id}`);\n  alert(\"삭제되었습니다.\");\n  history.push(`/`);\n  history.go(0); //새로고침\n}","map":{"version":3,"sources":["/Users/mindong-yeob/Desktop/toyproject_frontend/src/board/sagas/articleSaga.js"],"names":["articleActions","call","put","Axios","history","registerArticleAsync","action","data","payload","response","post","alert","console","log","id","push","fetchArticleAsync","get","getArticleAsync","updateArticleAsync","article","request","views","parseInt","deleteArticleAsync","delete","go"],"mappings":"AAAA,SAASA,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AAC1C,QAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;AACA,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAY,8BAAZ,EAA2CH,IAA3C,CAAvB;AACAI,EAAAA,KAAK,CAAC,UAAD,CAAL;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACF,IAAT,CAAcO,EAA1B,EAJ0C,CAK1C;;AACAV,EAAAA,OAAO,CAACW,IAAR,CAAc,YAAWN,QAAQ,CAACF,IAAT,CAAcO,EAAG,EAA1C,EAA6CL,QAAQ,CAACF,IAAT,CAAcO,EAA3D;AACH;AAED,OAAO,UAAUE,iBAAV,CAA4BV,MAA5B,EAAoC;AACvCM,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,QAAMQ,EAAE,GAAGR,MAAM,CAACE,OAAlB;AACA,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACc,GAAN,CAAW,+BAA8BH,EAAG,EAA5C,CAAvB;AACA,QAAMZ,GAAG,CAACF,cAAc,CAACkB,eAAf,CAA+BT,QAAQ,CAACF,IAAxC,CAAD,CAAT;AACH;AACD,OAAO,UAAUY,kBAAV,CAA6Bb,MAA7B,EAAqC;AACxC,QAAMc,OAAO,GAAGd,MAAM,CAACE,OAAvB;AACA,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACD,GAAN,CAClB,+BAA8BkB,OAAO,CAACN,EAAG,EADvB,EAEnBM,OAFmB,CAAvB;AAIAT,EAAAA,KAAK,CAAC,UAAD,CAAL;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACF,IAAT,CAAcO,EAA1B,EAPwC,CAQxC;;AACAV,EAAAA,OAAO,CAACW,IAAR,CAAc,YAAWN,QAAQ,CAACF,IAAT,CAAcO,EAAG,EAA1C,EAA6CL,QAAQ,CAACF,IAAT,CAAcO,EAA3D;AACH;AAED,OAAO,UAAUI,eAAV,CAA0BZ,MAA1B,EAAkC;AACrC,QAAMQ,EAAE,GAAGR,MAAM,CAACE,OAAlB,CADqC,CAErC;AACA;AACA;;AACA,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACc,GAAN,CAAW,+BAA8BH,EAAG,EAA5C,CAAvB;AACA,QAAMO,OAAO,GAAG,MAAMlB,KAAK,CAACD,GAAN,CAAW,+BAA8BY,EAAG,EAA5C,EAA+C,EACjE,GAAGL,QAAQ,CAACF,IADqD;AAEjEe,IAAAA,KAAK,EAAEC,QAAQ,CAACd,QAAQ,CAACF,IAAT,CAAce,KAAf,CAAR,GAAgC;AAF0B,GAA/C,CAAtB,CANqC,CAUrC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMpB,GAAG,CAACF,cAAc,CAACkB,eAAf,CAA+BG,OAAO,CAACd,IAAvC,CAAD,CAAT;AACH;AACD,OAAO,UAAUiB,kBAAV,CAA6BlB,MAA7B,EAAqC;AACxC,QAAMQ,EAAE,GAAGR,MAAM,CAACE,OAAlB;AACA,QAAML,KAAK,CAACsB,MAAN,CAAc,+BAA8BX,EAAG,EAA/C,CAAN;AACAH,EAAAA,KAAK,CAAC,UAAD,CAAL;AACAP,EAAAA,OAAO,CAACW,IAAR,CAAc,GAAd;AACAX,EAAAA,OAAO,CAACsB,EAAR,CAAW,CAAX,EALwC,CAKzB;AAClB","sourcesContent":["import { articleActions } from \"../sagas/articleSlice\";\nimport { call, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport history from \"../utils/history\";\nexport function* registerArticleAsync(action) {\n    const data = action.payload;\n    const response = yield Axios.post(`http://localhost:4000/board/`, data);\n    alert(\"저장되었습니다.\");\n    console.log(response.data.id);\n    // history.push(`/article/${response.data.id}`);\n    history.push(`/article/${response.data.id}`, response.data.id);\n}\n\nexport function* fetchArticleAsync(action) {\n    console.log(action);\n    const id = action.payload;\n    const response = yield Axios.get(`http://localhost:4000/board/${id}`);\n    yield put(articleActions.getArticleAsync(response.data));\n}\nexport function* updateArticleAsync(action) {\n    const article = action.payload;\n    const response = yield Axios.put(\n        `http://localhost:4000/board/${article.id}`,\n        article\n    );\n    alert(\"수정되었습니다.\");\n    console.log(response.data.id);\n    // history.push(`/article/${response.data.id}`);\n    history.push(`/article/${response.data.id}`, response.data.id);\n}\n\nexport function* getArticleAsync(action) {\n    const id = action.payload;\n    //Axios의 post method로 data 객체를 http://localhost:4000/board url로 요청을 보내주는 것.\n    //axios에서는 get으로 객체를 보낼수는 없게 되어있음\n    //const postedData = yield Axios.post(`http://localhost:4000/board`,data);\n    const response = yield Axios.get(`http://localhost:4000/board/${id}`);\n    const request = yield Axios.put(`http://localhost:4000/board/${id}`, {\n        ...response.data,\n        views: parseInt(response.data.views) + 1,\n    });\n    //yield alert(\"저장되었습니다\");\n    // yield put(articleActions.registerArticleAsync(data));\n    //debugger;\n    //console.log(response.data);\n    // const history = yield getContext(\"history\");\n    // yield history.push(`/article/${response.data.id}`);\n    //history.push(`/article/${response.data.id}`,response.data.id);\n    yield put(articleActions.getArticleAsync(request.data));\n}\nexport function* deleteArticleAsync(action) {\n    const id = action.payload;\n    yield Axios.delete(`http://localhost:4000/board/${id}`);\n    alert(\"삭제되었습니다.\");\n    history.push(`/`);\n    history.go(0); //새로고침\n}\n"]},"metadata":{},"sourceType":"module"}