{"ast":null,"code":"var _jsxFileName = \"/Users/mindong-yeob/Desktop/studymatchingfront_newHome/src/map/Map.js\";\nimport React from \"react\";\nimport \"./Map.css\";\nimport { markerdata } from \"../kakao/markerData\";\n/*global kakao */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.markers = markerdata;\n    this.state = {\n      latitude: this.props.latitude,\n      longitude: this.props.longitude,\n      level: 4\n    };\n  }\n\n  componentDidMount() {\n    var container = document.getElementById(\"myMap\");\n    var options = {\n      center: new kakao.maps.LatLng(this.state.latitude, this.state.longitude),\n      level: 4\n    };\n    this.map = new kakao.maps.Map(container, options);\n    this.markers.forEach(el => {\n      var marker = new kakao.maps.Marker({\n        //map: this.map,\n        position: new kakao.maps.LatLng(el.lat, el.lng),\n        title: el.title,\n        clickable: true\n      });\n      marker.setMap(this.map);\n      var iwContent = `<div style=\"padding:5px;width:100px\">${el.title}<br><a href=\"/${el.title}\">이 마커에 등록된 게시글로 이동.(미완성)</a></div>`; //var iwPosition = new kakao.maps.LatLng(el.lat, el.lng);\n\n      var iwRemoveable = true;\n      var infowindow = new kakao.maps.InfoWindow({\n        //position: iwPosition,\n        removable: iwRemoveable,\n        content: iwContent\n      });\n      kakao.maps.event.addListener(marker, \"click\", this.clickListener(this.map, marker, infowindow));\n      kakao.maps.event.addListener(this.map, \"click\", this.closeMarkerListener(infowindow));\n    });\n  }\n\n  clickListener(map, marker, infowindow) {\n    return function () {\n      infowindow.open(map, marker);\n    };\n  }\n\n  closeMarkerListener(infowindow) {\n    return function () {\n      infowindow.close();\n    };\n  }\n\n  setCenter() {\n    var moveLatLon = new kakao.maps.LatLng(this.props.latitude, this.props.longitude);\n    this.map.setCenter(moveLatLon);\n  }\n\n  componentDidUpdate() {\n    this.setCenter();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup_map\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"myMap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/mindong-yeob/Desktop/studymatchingfront_newHome/src/map/Map.js"],"names":["React","markerdata","Map","Component","constructor","props","markers","state","latitude","longitude","level","componentDidMount","container","document","getElementById","options","center","kakao","maps","LatLng","map","forEach","el","marker","Marker","position","lat","lng","title","clickable","setMap","iwContent","iwRemoveable","infowindow","InfoWindow","removable","content","event","addListener","clickListener","closeMarkerListener","open","close","setCenter","moveLatLon","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Map.css\";\nimport { markerdata } from \"../kakao/markerData\";\n\n/*global kakao */\n\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            latitude: this.props.latitude,\n            longitude: this.props.longitude,\n            level: 4,\n        };\n    }\n\n    map;\n    // 임시로 마커 추가\n    markers = markerdata;\n\n    componentDidMount() {\n        var container = document.getElementById(\"myMap\");\n        var options = {\n            center: new kakao.maps.LatLng(\n                this.state.latitude,\n                this.state.longitude\n            ),\n            level: 4,\n        };\n        this.map = new kakao.maps.Map(container, options);\n\n        this.markers.forEach((el) => {\n            var marker = new kakao.maps.Marker({\n                //map: this.map,\n                position: new kakao.maps.LatLng(el.lat, el.lng),\n                title: el.title,\n                clickable: true,\n            });\n\n            marker.setMap(this.map);\n\n            var iwContent = `<div style=\"padding:5px;width:100px\">${el.title}<br><a href=\"/${el.title}\">이 마커에 등록된 게시글로 이동.(미완성)</a></div>`;\n            //var iwPosition = new kakao.maps.LatLng(el.lat, el.lng);\n            var iwRemoveable = true;\n\n            var infowindow = new kakao.maps.InfoWindow({\n                //position: iwPosition,\n                removable: iwRemoveable,\n                content: iwContent,\n            });\n\n            kakao.maps.event.addListener(\n                marker,\n                \"click\",\n                this.clickListener(this.map, marker, infowindow)\n            );\n            kakao.maps.event.addListener(\n                this.map,\n                \"click\",\n                this.closeMarkerListener(infowindow)\n            );\n        });\n    }\n\n    clickListener(map, marker, infowindow) {\n        return function () {\n            infowindow.open(map, marker);\n        };\n    }\n\n    closeMarkerListener(infowindow) {\n        return function () {\n            infowindow.close();\n        };\n    }\n\n    setCenter() {\n        var moveLatLon = new kakao.maps.LatLng(\n            this.props.latitude,\n            this.props.longitude\n        );\n\n        this.map.setCenter(moveLatLon);\n    }\n\n    componentDidUpdate() {\n        this.setCenter();\n    }\n\n    render() {\n        return (\n            <div className=\"popup_map\">\n                <div id=\"myMap\"></div>\n            </div>\n        );\n    }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}