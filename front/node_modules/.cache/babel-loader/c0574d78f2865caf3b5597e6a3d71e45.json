{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./board/sagas/rootSlice\";\nimport rootSaga from \"./board/sagas/rootSaga\";\nimport history from \"./board/utils/history\"; //const customHistory = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware({\n  context: {\n    history: history\n  }\n});\nconst initialState = {};\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware, logger],\n  devTools: true,\n  preloadedState: initialState\n});\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/Users/mindong-yeob/Desktop/toyproject_frontend/src/store.js"],"names":["configureStore","createSagaMiddleware","logger","rootReducer","rootSaga","history","sagaMiddleware","context","initialState","store","reducer","middleware","devTools","preloadedState","run"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;;AACA,MAAMC,cAAc,GAAGL,oBAAoB,CAAC;AACxCM,EAAAA,OAAO,EAAE;AAAEF,IAAAA,OAAO,EAAEA;AAAX;AAD+B,CAAD,CAA3C;AAGA,MAAMG,YAAY,GAAG,EAArB;AACA,MAAMC,KAAK,GAAGT,cAAc,CAAC;AACzBU,EAAAA,OAAO,EAAEP,WADgB;AAEzBQ,EAAAA,UAAU,EAAE,CAACL,cAAD,EAAiBJ,MAAjB,CAFa;AAGzBU,EAAAA,QAAQ,EAAE,IAHe;AAIzBC,EAAAA,cAAc,EAAEL;AAJS,CAAD,CAA5B;AAMAF,cAAc,CAACQ,GAAf,CAAmBV,QAAnB;AACA,eAAeK,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./board/sagas/rootSlice\";\nimport rootSaga from \"./board/sagas/rootSaga\";\nimport history from \"./board/utils/history\";\n\n//const customHistory = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware({\n    context: { history: history },\n});\nconst initialState = {};\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: [sagaMiddleware, logger],\n    devTools: true,\n    preloadedState: initialState,\n});\nsagaMiddleware.run(rootSaga);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}