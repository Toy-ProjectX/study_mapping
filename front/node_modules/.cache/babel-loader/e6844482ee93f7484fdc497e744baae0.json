{"ast":null,"code":"var _jsxFileName = \"/Users/mindong-yeob/Desktop/toyproject_frontend/src/Navbar.js\";\n\n/*eslint-disable no-undef*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"./board/Table\";\nimport MapHome from \"./map/MapHome\";\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TestHome extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLogin: false\n    };\n\n    this.loginWithKakao = () => {\n      try {\n        return new Promise((resolve, reject) => {\n          if (!Kakao) {\n            reject(\"Kakao 인스턴스가 존재하지 않습니다.\");\n          }\n\n          Kakao.Auth.login({\n            success: auth => {\n              console.log(\"정상적으로 로그인 되었습니다.\", auth);\n              this.setState({\n                isLogin: true\n              });\n            },\n            fail: err => {\n              console.error(err);\n            }\n          });\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.logoutWithKakao = () => {\n      if (Kakao.Auth.getAccessToken()) {\n        console.log(\"카카오 인증 액세스 토큰이 존재합니다.\", Kakao.Auth.getAccessToken());\n        Kakao.Auth.logout(() => {\n          console.log(\"로그아웃 되었습니다.\", Kakao.Auth.getAccessToken());\n          this.setState({\n            isLogin: false\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount 가 실행되었습니다.\");\n    Kakao.init(\"b7c5cb9042af5754b5af32fa54b1a96e\");\n\n    if (Kakao.Auth.getAccessToken()) {\n      console.log(\"액세스 토큰이 존재합니다. 세션을 유지합니다.\");\n      this.setState({\n        isLogin: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      isLogin\n    } = this.state;\n    console.log(this.props);\n\n    const loginView = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-info\",\n        className: \"mr-2\",\n        onClick: this.loginWithKakao,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-info\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n\n    const mainView = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-info\",\n        className: \"mr-2\",\n        onClick: this.logoutWithKakao,\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-info\",\n        children: \"\\uB0B4\\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/\",\n          className: \"pt-3\",\n          children: \"StudyMatching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"mr-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/Table\",\n            children: \"\\uAC8C\\uC2DC\\uD310\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/MapHome\",\n            children: \"\\uC9C0\\uB3C4\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          inline: true,\n          children: isLogin ? mainView : loginView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TestHome;","map":{"version":3,"sources":["/Users/mindong-yeob/Desktop/toyproject_frontend/src/Navbar.js"],"names":["React","Link","Table","MapHome","Navbar","Nav","Form","Button","TestHome","Component","state","isLogin","loginWithKakao","Promise","resolve","reject","Kakao","Auth","login","success","auth","console","log","setState","fail","err","error","logoutWithKakao","getAccessToken","logout","componentDidMount","init","render","props","loginView","mainView"],"mappings":"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","sourcesContent":["/*eslint-disable no-undef*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"./board/Table\";\nimport MapHome from \"./map/MapHome\";\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\n\nclass TestHome extends React.Component {\n    state = {\n        isLogin: false,\n    };\n\n    /**\n     * 로그인 할 경우 가입된 토큰이거나 이메일이 있을경우 회원 정보를 활용하여 로그인,\n     * (카카오로 그냥 로그인할 경우 로그아웃이 안되는 문제가 있음... 망할 아니면 쿠키를 지워서 강제로 로그아웃을 시킬 수 있음....)\n     * 없을경우 user에서 이메일, 성별, 토큰을 가져와 회원가입 시킨다.\n     *\n     *\n     */\n\n    loginWithKakao = () => {\n        try {\n            return new Promise((resolve, reject) => {\n                if (!Kakao) {\n                    reject(\"Kakao 인스턴스가 존재하지 않습니다.\");\n                }\n                Kakao.Auth.login({\n                    success: (auth) => {\n                        console.log(\"정상적으로 로그인 되었습니다.\", auth);\n                        this.setState({\n                            isLogin: true,\n                        });\n                    },\n                    fail: (err) => {\n                        console.error(err);\n                    },\n                });\n            });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    logoutWithKakao = () => {\n        if (Kakao.Auth.getAccessToken()) {\n            console.log(\n                \"카카오 인증 액세스 토큰이 존재합니다.\",\n                Kakao.Auth.getAccessToken()\n            );\n            Kakao.Auth.logout(() => {\n                console.log(\n                    \"로그아웃 되었습니다.\",\n                    Kakao.Auth.getAccessToken()\n                );\n                this.setState({\n                    isLogin: false,\n                });\n            });\n        }\n    };\n    componentDidMount() {\n        console.log(\"componentDidMount 가 실행되었습니다.\");\n        Kakao.init(\"b7c5cb9042af5754b5af32fa54b1a96e\");\n        if (Kakao.Auth.getAccessToken()) {\n            console.log(\"액세스 토큰이 존재합니다. 세션을 유지합니다.\");\n            this.setState({\n                isLogin: true,\n            });\n        }\n    }\n\n    render() {\n        const { isLogin } = this.state;\n\n        console.log(this.props);\n\n        const loginView = (\n            <div>\n                <Button\n                    variant=\"outline-info\"\n                    className=\"mr-2\"\n                    onClick={this.loginWithKakao}\n                >\n                    로그인\n                </Button>\n                <Button variant=\"outline-info\">회원가입</Button>\n            </div>\n        );\n\n        const mainView = (\n            <div>\n                <Button\n                    variant=\"outline-info\"\n                    className=\"mr-2\"\n                    onClick={this.logoutWithKakao}\n                >\n                    로그아웃\n                </Button>\n                <Button variant=\"outline-info\">내정보</Button>\n            </div>\n        );\n\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand href=\"/\" className=\"pt-3\">\n                        StudyMatching\n                    </Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"/Table\">게시판</Nav.Link>\n                        <Nav.Link href=\"/MapHome\">지도보기</Nav.Link>\n                    </Nav>\n                    <Form inline>{isLogin ? mainView : loginView}</Form>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default TestHome;\n"]},"metadata":{},"sourceType":"module"}