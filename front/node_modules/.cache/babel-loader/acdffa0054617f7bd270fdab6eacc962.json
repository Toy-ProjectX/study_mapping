{"ast":null,"code":"import { takeEvery, takeLatest, take } from \"redux-saga/effects\";\nimport { articleActions } from \"./articleSlice\";\nimport { boardActions } from \"./boardSlice\";\nimport { registerArticleAsync, getArticleAsync, fetchArticleAsync, updateArticleAsync, deleteArticleAsync } from \"./articleSaga\";\nimport { getBoardAsync } from \"./boardSaga\";\nimport { registerCommentAsync, getCommentsAsync, deleteCommentAsync } from \"./commentSaga\";\nimport { commentActions } from \"./commentSlice\";\nconst {\n  registerArticle,\n  getArticle,\n  fetchArticle,\n  updateArticle,\n  deleteArticle\n} = articleActions;\nconst {\n  getBoard\n} = boardActions;\nconst {\n  registerComment,\n  getComments,\n  deleteComment\n} = commentActions;\nexport default function* rootWatcher() {\n  yield takeLatest(registerArticle.type, registerArticleAsync);\n  yield takeEvery(getArticle.type, getArticleAsync);\n  yield takeEvery(getBoard.type, getBoardAsync);\n  yield takeEvery(fetchArticle.type, fetchArticleAsync);\n  yield takeLatest(updateArticle.type, updateArticleAsync);\n  yield takeLatest(deleteArticle.type, deleteArticleAsync);\n  yield takeLatest(registerComment.type, registerCommentAsync);\n  yield takeEvery(getComments.type, getCommentsAsync);\n  yield takeLatest(deleteComment.type, deleteCommentAsync);\n}","map":{"version":3,"sources":["/Users/mindong-yeob/Desktop/toyproject_frontend/src/board/sagas/rootSaga.js"],"names":["takeEvery","takeLatest","take","articleActions","boardActions","registerArticleAsync","getArticleAsync","fetchArticleAsync","updateArticleAsync","deleteArticleAsync","getBoardAsync","registerCommentAsync","getCommentsAsync","deleteCommentAsync","commentActions","registerArticle","getArticle","fetchArticle","updateArticle","deleteArticle","getBoard","registerComment","getComments","deleteComment","rootWatcher","type"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,IAAhC,QAA4C,oBAA5C;AACA,SAASC,cAAT,QAA8B,gBAA9B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,oBAAT,EAA+BC,eAA/B,EAAgDC,iBAAhD,EAAmEC,kBAAnE,EAAuFC,kBAAvF,QAAiH,eAAjH;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,oBAAT,EAA8BC,gBAA9B,EAAgDC,kBAAhD,QAA0E,eAA1E;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,MAAM;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA,YAA/B;AAA6CC,EAAAA,aAA7C;AAA4DC,EAAAA;AAA5D,IAA8EhB,cAApF;AACA,MAAM;AAAEiB,EAAAA;AAAF,IAAehB,YAArB;AACA,MAAM;AAAEiB,EAAAA,eAAF;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA;AAAhC,IAAiDT,cAAvD;AAEA,eAAe,UAAUU,WAAV,GAAwB;AACnC,QAAMvB,UAAU,CAACc,eAAe,CAACU,IAAjB,EAAuBpB,oBAAvB,CAAhB;AACA,QAAML,SAAS,CAACgB,UAAU,CAACS,IAAZ,EAAiBnB,eAAjB,CAAf;AACA,QAAMN,SAAS,CAACoB,QAAQ,CAACK,IAAV,EAAef,aAAf,CAAf;AACA,QAAMV,SAAS,CAACiB,YAAY,CAACQ,IAAd,EAAoBlB,iBAApB,CAAf;AACA,QAAMN,UAAU,CAACiB,aAAa,CAACO,IAAf,EAAoBjB,kBAApB,CAAhB;AACA,QAAMP,UAAU,CAACkB,aAAa,CAACM,IAAf,EAAqBhB,kBAArB,CAAhB;AACA,QAAMR,UAAU,CAACoB,eAAe,CAACI,IAAjB,EAAsBd,oBAAtB,CAAhB;AACA,QAAMX,SAAS,CAACsB,WAAW,CAACG,IAAb,EAAkBb,gBAAlB,CAAf;AACA,QAAMX,UAAU,CAACsB,aAAa,CAACE,IAAf,EAAqBZ,kBAArB,CAAhB;AAEH","sourcesContent":["import { takeEvery, takeLatest, take } from \"redux-saga/effects\"; \nimport { articleActions} from \"./articleSlice\"; \nimport { boardActions } from \"./boardSlice\";\nimport { registerArticleAsync, getArticleAsync, fetchArticleAsync, updateArticleAsync, deleteArticleAsync } from \"./articleSaga\"; \nimport { getBoardAsync } from \"./boardSaga\";\nimport { registerCommentAsync,getCommentsAsync, deleteCommentAsync } from \"./commentSaga\";\nimport { commentActions } from \"./commentSlice\";\n\nconst { registerArticle, getArticle, fetchArticle, updateArticle, deleteArticle } = articleActions; \nconst { getBoard } = boardActions; \nconst { registerComment, getComments, deleteComment} = commentActions;\n\nexport default function* rootWatcher() { \n    yield takeLatest(registerArticle.type, registerArticleAsync); \n    yield takeEvery(getArticle.type,getArticleAsync);\n    yield takeEvery(getBoard.type,getBoardAsync);\n    yield takeEvery(fetchArticle.type, fetchArticleAsync);\n    yield takeLatest(updateArticle.type,updateArticleAsync);\n    yield takeLatest(deleteArticle.type, deleteArticleAsync);\n    yield takeLatest(registerComment.type,registerCommentAsync);\n    yield takeEvery(getComments.type,getCommentsAsync);\n    yield takeLatest(deleteComment.type, deleteCommentAsync);\n\n}\n"]},"metadata":{},"sourceType":"module"}